let opts={seperator:".",comma:",",equal:"=",arrayMap:"*",pipe:"|"};const dig=function(t,e,i=opts){if(!t||!e)return null;if("object"==typeof e){if(Array.isArray(e))return e.map(e=>dig(t,e));const i=Object.keys(e),o={};for(const n of i)o[n]=dig(t,e[n]);return o}let o=t,n=e.split(i.seperator);for(let t=0;t<n.length;t+=1){const e=n[t];if(-1!==e.indexOf(i.pipe)){const t=e.split(i.pipe);let n=null;for(const e of t)if(n=dig(o,e))break;o=n}else if(-1!==e.indexOf(i.comma)){const t=e.split(i.comma),n={};for(const e of t)n[e]=dig(o,e);o=n}else if(-1!==e.indexOf(i.equal)){const t=e.split(i.equal),n=t[0],s=t[1];o=o.find(t=>n?t[n]==s:t==s)}else e===i.arrayMap?(t+=1,o=o.map(e=>dig(e,n.slice(t)[0]))):o=o[e];if(null==o||null==o)return null}return o},output={dig:dig,setOptions:function(t){Object.assign(opts,t)}};try{module.exports=output}catch(t){Object.assign(window,output)}